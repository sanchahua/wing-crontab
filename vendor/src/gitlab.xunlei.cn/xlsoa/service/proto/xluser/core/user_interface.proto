syntax = "proto3";

option go_package = "xluser/core/user_interface";
package xluser.core.user_interface;

enum ErrorCode{
  UNKNOWN     = 0;   // 未知错误
  OK          = 200; // 成功
  EXISTS      = 300; // 帐号已存在-注册返回
  ARGERR      = 403; // 请求参数非法
  NOTFOUND    = 404; // 帐号不存在
  UIDBINDED   = 405; // 该迅雷UID已绑定帐号(绑定时返回)
  ACCBINDED   = 406; // 该帐号已被使用(绑定时返回)
  NOBINDING   = 407; // 该迅雷UID未绑定帐号(解邦时返回)
  PSWARGERR   = 411; // 密码格式不正确
  PSWERR      = 412; // 密码错误
  INTERNALERR = 500; // 内部错误
  DBERR       = 501; // 数据库错误
  APIPERMIT   = 505; // 没有命令权限
}

// 接口列表
service GWInterfaceV0{
  // 注册(必须携带 字符帐号 或者 数字帐号，可加手机或邮箱进行注册)
  rpc Register(RegisterRequest) returns (RegisterReply) {}

  // 设置用户信息
  rpc SetUserinfo(SetUserinfoRequest) returns (SetUserinfoReply) {}

  // 设置用户状态(0: 正常， 1: 冻结， 2: 回收)
  rpc SetState(SetUserinfoRequest) returns (SetUserinfoReply) {}

  // 更新用户信息(主要是信息累加)
  rpc UpdUserinfo(UpdUserinfoRequest) returns (UpdUserinfoReply) {}

  // 获取用户信息
  rpc GetUserinfo(GetUserinfoRequest) returns (GetUserinfoReply) {}

  // 获取用户信息-low权限
  rpc GetLowUserinfo(GetUserinfoRequest) returns (GetUserinfoReply) {}

  // 获取用户信息-high权限
  rpc GetHighUserinfo(GetUserinfoRequest) returns (GetUserinfoReply) {}

  // 获取用户信息-可获取md5psw
  rpc GetPswUserinfo(GetUserinfoRequest) returns (GetUserinfoReply) {}

  // 获取基本资料信息
  rpc GetBaseUserinfo(GetBaseUserinfoRequest) returns (GetBaseUserinfoReply) {}

  // 获取积分信息
  rpc GetScoreUserinfo(GetScoreUserinfoRequest) returns (GetScoreUserinfoReply) {}

  // 获取安全信息
  rpc GetSecUserinfo(GetSecUserinfoRequest) returns (GetSecUserinfoReply) {}

  // 获取安全信息-low权限(部分带*)
  rpc GetLowSecUserinfo(GetSecUserinfoRequest) returns (GetSecUserinfoReply) {}

  // 获取安全信息-high权限(全文返回)
  rpc GetHighSecUserinfo(GetSecUserinfoRequest) returns (GetSecUserinfoReply) {}

  // 通过内部UID查询迅雷帐号(也支持迅雷帐号查迅雷帐号)
  rpc ID2Name(ID2NameRequest) returns (ID2NameReply) {}

  // 通过迅雷帐号查询内部UID
  rpc Name2ID(Name2IDRequest) returns (Name2IDReply) {}

  // 解邦UID和迅雷帐号(每次只能解邦一类帐号-字符帐号,数字帐号,邮箱帐号,手机帐号)
  rpc Unbind(UnbindRequest) returns (UnbindReply) {}

  // 绑定UID和迅雷帐号
  rpc Bind(BindRequest) returns (BindReply) {}

  // 重置密码
  rpc Retakepass(RetakepassRequest) returns (RetakepassReply) {}

  // 校验密码
  rpc Checkpass(CheckpassRequest) returns (CheckpassReply) {}

  // 修改密码
  rpc Changepass(ChangepassRequest) returns (ChangepassReply) {}
} 

// 网关请求必须字段
message GatewayEssential{
  string userid = 1;   // 帐号或内部UID，根据usertype标识
  int32 usertype = 2;
}

// 注册-请求
message RegisterRequest{
  GatewayEssential gatewayessential = 1;
  string md5psw = 2;
  map<string, string> fieldlist = 3;
}

// 注册-响应
message RegisterReply{
  ErrorCode result = 1;
  uint64 userno = 2;
}

// 设置用户信息-请求
message SetUserinfoRequest{
  GatewayEssential gatewayessential = 1;
  map<string, string> fieldlist = 2;
}

// 设置用户信息-响应
message SetUserinfoReply{
  ErrorCode result = 1;
}

// 更新用户信息-请求
message UpdUserinfoRequest{
  GatewayEssential gatewayessential = 1;
  map<string, string> fieldlist = 2;
}

// 更新用户信息-响应
message UpdUserinfoReply{
  ErrorCode result = 1;
}

// 获取用户信息-请求
message GetUserinfoRequest{
  GatewayEssential gatewayessential = 1;
  map<string, string> fieldlist = 2;
}

// 获取用户信息-响应
message GetUserinfoReply{
  ErrorCode result = 1;
  map<string, string> fieldlist = 2; 
}

// 获取基本资料信息-请求
message GetBaseUserinfoRequest{
  GatewayEssential gatewayessential = 1;
}

// 获取基本资料信息-响应
message GetBaseUserinfoReply{
  ErrorCode result = 1;
  map<string, string> fieldlist = 2;
}
  
// 获取积分信息-请求
message GetScoreUserinfoRequest{
  GatewayEssential gatewayessential = 1;
}

// 获取积分信息-响应
message GetScoreUserinfoReply{
  ErrorCode result = 1;
  map<string, string> fieldlist = 2;
}

// 获取安全信息-请求
message GetSecUserinfoRequest{
  GatewayEssential gatewayessential = 1;
}

// 获取安全信息-响应
message GetSecUserinfoReply{
  ErrorCode result = 1;
  map<string, string> fieldlist = 2;
}

// 通过内部UID查询迅雷帐号-请求
message ID2NameRequest{
  GatewayEssential gatewayessential = 1;
  int32 nametype = 2;
}

// 通过内部UID查询迅雷帐号-响应
// namelist, key  :请求UID对应的用户名类型, -1:错误 0: 旧帐号  1:新帐号  2:内部ID  3:身份证号码 4:邮箱 5:手机号 8:gameid
// namelist, valse  : 类型对应的具体数据
message ID2NameReply{
  ErrorCode result = 1;
  uint64 userno = 2;
  map<string, string> namelist = 3; 
}

// 通过迅雷帐号查询内部UID-请求
message Name2IDRequest{
  GatewayEssential gatewayessential = 1;
}

// 通过迅雷帐号查询内部UID-响应
message Name2IDReply{
  ErrorCode result = 1;
  uint64 userno = 2;
  int32 usertype = 3;
}

// 解邦UID和迅雷帐号-请求
// nametype:  0: 旧帐号  1:新帐号  4:邮箱 5:手机号  
message UnbindRequest{
  GatewayEssential gatewayessential = 1;
  int32 nametype = 2;
}

// 解邦UID和迅雷帐号-响应
message UnbindReply{
  ErrorCode result = 1;
}

// 绑定UID和迅雷帐号-请求
message BindRequest{
  GatewayEssential gatewayessential = 1;
  int32 nametype = 2;
  string name = 3;
}

// 绑定UID和迅雷帐号-响应
message BindReply{
  ErrorCode result = 1;
}

// 重置密码-响应
message RetakepassRequest{
  GatewayEssential gatewayessential = 1;
  string md5psw = 2;
}

// 重置密码-响应
message RetakepassReply{
  ErrorCode result = 1;
}

// 校验密码-请求
message CheckpassRequest{
  GatewayEssential gatewayessential = 1;
  string md5psw = 2;
  map<string, string> fieldlist = 3;
}

// 校验密码-响应
message CheckpassReply{
  ErrorCode result = 1;
  map<string, string> fieldlist = 2; 
}

// 修改密码-请求
message ChangepassRequest{
  GatewayEssential gatewayessential = 1;
  string useroldpass = 2;
  string usernewpass = 3;
}

// 修改密码-响应
message ChangepassReply{
  ErrorCode result = 1;
}

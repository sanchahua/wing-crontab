// Code generated by protoc-gen-go.
// source: proto/xlsoa/example/candy.proto
// DO NOT EDIT!

/*
Package xlsoa_example is a generated protocol buffer package.

It is generated from these files:
	proto/xlsoa/example/candy.proto
	proto/xlsoa/example/greeter.proto

It has these top-level messages:
	CandyGetRequest
	CandyGetReply
	HelloRequest
	HelloReply
*/
package xlsoa_example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CandyGetRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CandyGetRequest) Reset()                    { *m = CandyGetRequest{} }
func (m *CandyGetRequest) String() string            { return proto.CompactTextString(m) }
func (*CandyGetRequest) ProtoMessage()               {}
func (*CandyGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CandyGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CandyGetReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *CandyGetReply) Reset()                    { *m = CandyGetReply{} }
func (m *CandyGetReply) String() string            { return proto.CompactTextString(m) }
func (*CandyGetReply) ProtoMessage()               {}
func (*CandyGetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CandyGetReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CandyGetRequest)(nil), "xlsoa.example.CandyGetRequest")
	proto.RegisterType((*CandyGetReply)(nil), "xlsoa.example.CandyGetReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Candy1 service

type Candy1Client interface {
	Get(ctx context.Context, in *CandyGetRequest, opts ...grpc.CallOption) (*CandyGetReply, error)
}

type candy1Client struct {
	cc *grpc.ClientConn
}

func NewCandy1Client(cc *grpc.ClientConn) Candy1Client {
	return &candy1Client{cc}
}

func (c *candy1Client) Get(ctx context.Context, in *CandyGetRequest, opts ...grpc.CallOption) (*CandyGetReply, error) {
	out := new(CandyGetReply)
	err := grpc.Invoke(ctx, "/xlsoa.example.candy1/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Candy1 service

type Candy1Server interface {
	Get(context.Context, *CandyGetRequest) (*CandyGetReply, error)
}

func RegisterCandy1Server(s *grpc.Server, srv Candy1Server) {
	s.RegisterService(&_Candy1_serviceDesc, srv)
}

func _Candy1_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandyGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Candy1Server).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xlsoa.example.candy1/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Candy1Server).Get(ctx, req.(*CandyGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Candy1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xlsoa.example.candy1",
	HandlerType: (*Candy1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Candy1_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/xlsoa/example/candy.proto",
}

// Client API for Candy2 service

type Candy2Client interface {
	Get(ctx context.Context, in *CandyGetRequest, opts ...grpc.CallOption) (*CandyGetReply, error)
}

type candy2Client struct {
	cc *grpc.ClientConn
}

func NewCandy2Client(cc *grpc.ClientConn) Candy2Client {
	return &candy2Client{cc}
}

func (c *candy2Client) Get(ctx context.Context, in *CandyGetRequest, opts ...grpc.CallOption) (*CandyGetReply, error) {
	out := new(CandyGetReply)
	err := grpc.Invoke(ctx, "/xlsoa.example.candy2/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Candy2 service

type Candy2Server interface {
	Get(context.Context, *CandyGetRequest) (*CandyGetReply, error)
}

func RegisterCandy2Server(s *grpc.Server, srv Candy2Server) {
	s.RegisterService(&_Candy2_serviceDesc, srv)
}

func _Candy2_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CandyGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Candy2Server).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xlsoa.example.candy2/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Candy2Server).Get(ctx, req.(*CandyGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Candy2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xlsoa.example.candy2",
	HandlerType: (*Candy2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Candy2_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/xlsoa/example/candy.proto",
}

func init() { proto.RegisterFile("proto/xlsoa/example/candy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xaf, 0xc8, 0x29, 0xce, 0x4f, 0xd4, 0x4f, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5,
	0x4f, 0x4e, 0xcc, 0x4b, 0xa9, 0xd4, 0x03, 0xcb, 0x08, 0xf1, 0x82, 0xa5, 0xf4, 0xa0, 0x52, 0x4a,
	0xaa, 0x5c, 0xfc, 0xce, 0x20, 0x59, 0xf7, 0xd4, 0x92, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30,
	0x5b, 0x49, 0x93, 0x8b, 0x17, 0xa1, 0xac, 0x20, 0xa7, 0x52, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5,
	0xb8, 0x38, 0x31, 0x1d, 0xa6, 0x0e, 0xc6, 0x35, 0xf2, 0xe7, 0x62, 0x03, 0xdb, 0x67, 0x28, 0xe4,
	0xca, 0xc5, 0xec, 0x9e, 0x5a, 0x22, 0x24, 0xa7, 0x87, 0x62, 0xa5, 0x1e, 0x9a, 0x7d, 0x52, 0x32,
	0x38, 0xe5, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0xe0, 0x06, 0x1a, 0x51, 0xc9, 0xc0, 0x24, 0x36, 0x70,
	0x48, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xb8, 0x92, 0xd2, 0x2c, 0x01, 0x00, 0x00,
}
